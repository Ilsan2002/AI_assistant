import datetime as dt
import os.path
from google.auth.transport.requests import Request
from google.oauth2.credentials import Credentials
from google_auth_oauthlib.flow import InstalledAppFlow
from googleapiclient.discovery import build
from googleapiclient.errors import HttpError

SCOPES = ["https://www.googleapis.com/auth/calendar"]

def main():
    creds = None

    if os.path.exists("token.json"):
        creds = Credentials.from_authorized_user_file("token.json")

    if not creds or not creds.valid:
        if creds and creds.expired and creds.refresh_token:
            creds.refresh(Request())
        else:
            flow = InstalledAppFlow.from_client_secrets_file("credentials.json", SCOPES)
            creds = flow.run_local_server(port=0)

        with open("token.json", "w") as token:
            token.write(creds.to_json()) 

    try:
        service = build("calendar", "v3", credentials=creds)

        event = {
            "summary": "Nap Time",
            "description": "Time to relax and take a nap.",
            'colorId': 6,
            "start": {
                "dateTime": "2023-10-19T13:00:00-04:00",
                "timeZone": "America/Detroit",
            },
            "end": {
                "dateTime": "2023-10-19T14:00:00-04:00",
                "timeZone": "America/Detroit",
            },
            "recurrence": ["RRULE:FREQ=DAILY;COUNT=1"],
            "attendees": [
                {"email": "ilsankenzhebaev27@gmail.com"},
                {"email": "ik10@albion.edu"},
            ],
        }
        event = service.events().insert(calendarId="primary", body=event).execute()
        print(f"Event created {event.get('htmlLink')}")
        
        
    except HttpError as err:
        print("An error occurred:", err)

if __name__ == "__main__":
    main()
